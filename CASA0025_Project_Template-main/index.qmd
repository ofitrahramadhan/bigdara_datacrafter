---
title: CASA00025 Group Project Title Here
jupyter:
  jupytext:
    text_representation:
      extension: .qmd
      format_name: quarto
      format_version: '1.0'
      jupytext_version: 1.15.2
  kernelspec:
    display_name: Python 3 (ipykernel)
    language: python
    name: python3
---


## Project Summary 

Fill in the sections below to provide a brief summary of your project. Each section should have no more than 100 words. Do not edit any of the headings.

### Problem Statement 

What is the problem youâ€™re trying to address using this application? 

### End User 

Who are you building this application for? How does it address a need this community has?

### Data

Datasets that we have used & the relevant data from the dataset which we have used are described below in detail:-

1. **United States Census Bureau TIGER Dataset**
   It contains the boundary information i.e. counties of states which are the primary legal divisions units of US states.
    - *Dataset:* ee.ImageCollection("TIGER/2016/Counties")
    - *Dataset Provider:* United States Census Bureau
    - *Data Used for our Study:* `STATEFP` parameter of the dataset which provides the State FIPS code & the North Dakota value is used.
<br><br>     
2. **USDA NASS Cropland Data Layers**
   It is a crop-specific land cover data layer created annually for the continental United States using moderate resolution satellite imagery and extensive agricultural ground truth.
    - *Dataset:* ee.FeatureCollection("USDA/NASS/CDL")
    - *Dataset Provider:* USDA National Agricultural Statistics Service
    - *Data Used for our Study:* `cropland` values for different crops of our study are used Wheat, Corn & Soybean Values provided from the Cropland Table.
<br><br>     
3. **MOD13Q1.061 Terra Vegetation Indices 16-Day Global**
   It provides Normalized Difference Vegetation Index (NDVI) value on a per pixel basis. 
    - *Dataset:* ee.ImageCollection("MODIS/061/MOD13Q1")
    - *Dataset Provider:* NASA LP DAAC at the USGS EROS Center
    - *Data Used for our Study:* `NDVI` parameter of the dataset which provides the Normalized Difference Vegetation Index.
<br><br>     
4. **GRIDMET:Gridded Surface Meteorological Dataset**
   It provides the high spatial resolution (~4-km) daily surface fields of temperature, precipitation, winds, humidity and radiation across the contiguous United States from 1979. 
    - *Dataset:* ee.ImageCollection("IDAHO_EPSCOR/GRIDMET")
    - *Dataset Provider:* USDA National Agricultural Statistics Service
    - *Data Used for our Study:* `pr` parameter of the dataset which provides the 'Precipitation amount' in mm (daily total)
<br><br>      
5. **Sentinel-1 SAR GRD**
   It contains the boundary information i.e. counties of states which are the primary legal divisions units of US states.
    - *Dataset:* ee.ImageCollection("COPERNICUS/S1_GRD")
    - *Dataset Provider:* European Union/ESA/Copernicus
    - *Data Used for our Study:* `VV` parameter of the dataset which provides 'Single co-polarization, vertical transmit/vertical receive' in dB.
<br><br> 
6. **SPL3SMP_E.005 SMAP L3 Radiometer Global Daily 9km Soil Moisture**
   It provides a daily composite of global land surface conditions retrieved by the Soil Moisture Active Passive (SMAP) L-Band radiometer. The daily data here were collected from the descending (local solar time of 6 am) and ascending (local solar time of 6 pm) passes.
    - *Dataset:* ee.ImageCollection("NASA/SMAP/SPL3SMP_E/005")
    - *Dataset Provider:* Google and NSIDC
    - *Data Used for our Study:* `soil_moisture_am` & `soil_moisture_pm`parameter of the dataset which provides 'Retrieved soil moisture estimate from the disaggregated/downscaled vertical polarization brightness temperature at 9-km grid cell one at AM overpass & other at  PM overpass.in dB.
<br><br>
7. **MOD11A1.061 Terra Land Surface Temperature**
   MOD11A1 V6.1 product provides daily land surface temperature (LST) along with other parameters.
    - *Dataset:* ee.ImageCollection("NASA/SMAP/SPL3SMP_E/005")
    - *Dataset Provider:* NASA LP DAAC at the USGS EROS Center
    - *Data Used for our Study:* `LST_Day_1km` & `LST_Night_1km`parameter of the dataset which provides 'Daytime Land Surface Temperature' & Daytime Land Surface Temperature' both in Kelvin (K).
<br><br>
8. **MCD18C2.061 Photosynthetically Active Radiation Daily 3 hour**
   The MCD18C2 Version 6.1 is a Moderate Resolution Imaging Spectroradiometer (MODIS) Terra and Aqua combined Photosynthetically Active Radiation (PAR) gridded Level 3 product produced daily at 0.05 degree (5,600 meters at the equator) resolution with estimates of PAR every 3 hours. 
    - *Dataset:* ee.ImageCollection("MODIS/061/MCD18C2")
    - *Dataset Provider:* NASA LP DAAC at the USGS EROS Center
    - *Data Used for our Study:* `GMT_1200_PAR` parameter of the dataset which provides 'Total PAR at GMT 12:00'.PAR is incident solar radiation in the visible spectrum (400-700 nanometers) and is an important variable in land-surface models having use in agriculture & other scientific applications.
<br><br>
9. **MOD16A2GF.061: Terra Net Evapotranspiration**
   It includes inputs of daily meteorological reanalysis data along with MODIS remotely sensed data products such as vegetation property dynamics, albedo, and land cover.
The pixel values for the two Evapotranspiration layers (ET and PET) are the sum of all eight days within the composite period, and the pixel values for the two Latent Heat layers (LE and PLE) are the average of all eight days within the composite peri.
   - *Dataset:* ee.ImageCollection("MODIS/061/MOD16A2GF")
   - *Dataset Provider:* NASA LP DAAC at the USGS EROS Center
   - *Data Used for our Study:* `ET` parameter of the dataset which provides 'Total evapotranspiration' in kg/m^2/8day.s.
<br><b>
ice

### Methodology

How are you using this data to address the problem?

### Interface

Here is a presentation to show, how our application work:

<div style="position: relative; width: 100%; height: 0; padding-top: 56.2500%;
 padding-bottom: 0; box-shadow: 0 2px 8px 0 rgba(63,69,81,0.16); margin-top: 1.6em; margin-bottom: 0.9em; overflow: hidden;
 border-radius: 8px; will-change: transform;">
  <iframe loading="lazy" style="position: absolute; width: 100%; height: 100%; top: 0; left: 0; border: none; padding: 0;margin: 0;"
    src="https:&#x2F;&#x2F;www.canva.com&#x2F;design&#x2F;DAGCq_eFmq8&#x2F;Muz__V20V7SJUNr3EVBSEQ&#x2F;view?embed" allowfullscreen="allowfullscreen" allow="fullscreen">
  </iframe>
</div>
<a href="https:&#x2F;&#x2F;www.canva.com&#x2F;design&#x2F;DAGCq_eFmq8&#x2F;Muz__V20V7SJUNr3EVBSEQ&#x2F;view?utm_content=DAGCq_eFmq8&amp;utm_campaign=designshare&amp;utm_medium=embeds&amp;utm_source=link" target="_blank" rel="noopener">CropInvest-Burhan</a> by Burhan Ahmad Wani

## The Application 

The link for our application is :

:::{.column-page}

<iframe src='https://songzimeng.users.earthengine.app/view/datacrafter1' width='100%' height='700px'></iframe>

:::
## How it Works 

Use this section to explain how your application works using code blocks and text explanations (no more than 500 words excluding code):

```js
Map.setCenter(35.51898, 33.90153, 15);

Map.setOptions("satellite");

var aoi = ee.Geometry.Point(35.51898, 33.90153).buffer(3000);
```

You can include images:

![Pixelwise T-Test, 2018](images/beirut_change_2020.jpg)

and math:
$$ \Large t = {\frac{\overline{x_1}-\overline{x_2}} {\sqrt{\frac{s^2_1}{n_1} + \frac{s^2_2}{n_2}}}} $$


